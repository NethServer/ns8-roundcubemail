#!/usr/bin/env python3

#
# Copyright (C) 2022 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

#
# Read configuration
#

import os
import sys
import json
import agent

# Prepare return variable
config = {}

# Read current configuration from the environment file
config["host"] = os.getenv("TRAEFIK_HOST","")
config["http2https"] = os.getenv("TRAEFIK_HTTP2HTTPS") == "True"
config["lets_encrypt"] = os.getenv("TRAEFIK_LETS_ENCRYPT") == "True"

rdb = agent.redis_connect() # full read-only access on every key

config["mail_server"] = os.getenv("MAIL_SERVER", "") # the value is the Mail module UUID!
config["mail_domain"] = os.getenv("MAIL_DOMAIN", "") # the value is the mail domain of user to force domain identity : user@domain.com !
config["plugins"] = os.getenv("ROUNDCUBEMAIL_PLUGINS","").replace('archive,zipdownload,managesieve,markasjunk,','')
config["upload_max_filesize"] = os.getenv("ROUNDCUBEMAIL_UPLOAD_MAX_FILESIZE","10").replace('M','')

modules=[]
tmp = []
# we query about all mail server to use it inside the user interface
for key in agent.list_service_providers(rdb,'imap','tcp'):
    mail = key['module_id']
    get_retval = agent.tasks.run(f"module/{mail}",'list-domains')
    for kd in get_retval['output']:
        if kd['addusers']:
            obj = {
                "name": key['module_id'],
                "label": key['mail_hostname']+' domain: '+kd['domain'],
                "value": key['module_uuid']+','+kd['domain'],
            }
            modules.append(obj)

# use it inside a dropdown
config['mail_server_URL'] = modules

# Dump the configuration to stdout
json.dump(config, fp=sys.stdout)
