#!/usr/bin/env python3

#
# Copyright (C) 2022 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

import json
import sys
import agent
import agent.tasks
import os

# Try to parse the stdin as JSON.
# If parsing fails, output everything to stderr
data = json.load(sys.stdin)

# Setup default values
starttls_imap   = "true" if data["starttls_imap"]   else "false"
starttls_smtp   = "true" if data["starttls_smtp"]   else "false"
encrypted_imap  = "true" if data["encrypted_imap"]  else "false"
encrypted_smtp  = "true" if data["encrypted_smtp"]  else "false"
tls_verify_imap = "true" if data["tls_verify_imap"] else "false"
tls_verify_smtp = "true" if data["tls_verify_smtp"] else "false"
# allow self signed certicate
allow_self_signed_imap = "true" if not data["tls_verify_imap"]  else "false"
allow_self_signed_smtp = "true" if not data["tls_verify_smtp"]  else "false"

f = open("config/config.nethserver.php", "w")
f.write("<?php \n")
f.close()

f = open("config/config.nethserver.php", "a")

if data["starttls_imap"] or data["encrypted_imap"]:
    f.write("$config['imap_conn_options'] = ['ssl'=>['verify_peer'=>"+tls_verify_imap+",'verify_peer_name'=>"+tls_verify_imap+",'allow_self_signed'=>"+allow_self_signed_imap+"], ]; \n")

if  data["starttls_smtp"] or data["encrypted_smtp"]:
    f.write("$config['smtp_conn_options'] = ['ssl'=>['verify_peer'=>"+tls_verify_smtp+",'verify_peer_name'=>"+tls_verify_smtp+",'allow_self_signed'=>"+allow_self_signed_smtp+"], ]; \n")

f.close()
