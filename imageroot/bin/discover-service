#!/usr/bin/env python3

#
# Copyright (C) 2022 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

#
# Find settings (port, ip, ..) of mail service among the cluster
#

import os
import sys
import json
import agent

rdb = agent.redis_connect(host="127.0.0.1") # full read-only access on every key


imap = agent.list_service_providers(rdb, 'imap', 'tcp', {
    'module_id': os.getenv('MAIL_SERVER', '')
})

if not imap:
    imap = agent.list_service_providers(rdb, 'imap', 'tcp', {
        'module_uuid': os.getenv('MAIL_MODULE_UUID', '')
    })


smtp = agent.list_service_providers(rdb, 'submission', 'tcp', {
    'module_id': os.getenv('MAIL_SERVER', '')
})

if not smtp:
    smtp = agent.list_service_providers(rdb, 'submission', 'tcp', {
        'module_uuid': os.getenv('MAIL_MODULE_UUID', '')
    })

if imap:
    imap_port = imap[0]['port']
    imap_server = imap[0]['host']
    user_domain = imap[0]['user_domain']

if smtp:
    smtp_port = smtp[0]['port']
    smtp_server = smtp[0]['host']


envfile = "roundcubemail_default_port.env"

# Using .tmp suffix: do not overwrite the target file until the new one is
# saved to disk:
with open(envfile + ".tmp", "w") as efp:
    print(f"ROUNDCUBEMAIL_DEFAULT_PORT={imap_port}", file=efp)
    print(f"ROUNDCUBEMAIL_SMTP_PORT={smtp_port}", file=efp)
    print(f"ROUNDCUBEMAIL_DEFAULT_HOST={imap_server}", file=efp)
    print(f"ROUNDCUBEMAIL_SMTP_SERVER={smtp_server}", file=efp)

# Commit changes by replacing the existing envfile:
os.replace(envfile + ".tmp", envfile)

# we need to expand the IP of mail server in sieve file
with open("config/config.managesieve.php", "w") as f:
    f.write("<?php\n")
    f.write("$config['managesieve_host'] = '"+imap_server+":4190';\n")

#
# Write default settings of roundcubemail
#
with open("config/config.nethserver.php", "w") as f:
    f.write("<?php \n")
    # we want to prefill with user_domain of list_service_providers
    if imap_server and user_domain:
        f.write("$config['username_domain'] = array('"+imap_server+"' => '"+ user_domain +"'); \n")
        f.write("$config['mail_domain'] = array('"+imap_server+"' => '"+ user_domain +"'); \n")
    # allow the browser to save login/credential and to fill them
    f.write("$config['login_autocomplete'] = 2; \n")
